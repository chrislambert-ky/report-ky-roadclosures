{"openapi":"3.1.0","info":{"title":"Kentucky Transportation Cabinet, Spatial API Services","description":"<center>![image](/static/KYTC-Brand.png \"KYTC\")</center> <br> <a href=\"https://kytc-api-v100-docs-qrntk7e3ra-uc.a.run.app/app\" target=\"_blank\">Documentation & Tools</a>","contact":{"name":"KYTC","url":"https://transportation.ky.gov/","email":"KYTC.BigData@ky.gov"},"version":"v1.0.0-lts"},"paths":{"/api/route/GetRouteInfoByCoordinates":{"get":{"tags":["Route Services"],"summary":"Get Route Info By Coordinates","description":"<h2>Get Route Information by Coordinates</h2>\n- **Purpose:** Return information about a route by passing a coordinate pair.\n- **Return Geometry:** Snapped point.\n- **Example Python Code** _(synchronous - simpler but slower)_: [link](https://kytc-api-v100-docs-qrntk7e3ra-uc.a.run.app/app?tabs_main=2&code_examples=0)\n- **Example Python Code** _(asynchronous - more complex but faster)_: [link](https://kytc-api-v100-docs-qrntk7e3ra-uc.a.run.app/app?tabs_main=2&code_examples=1)","operationId":"get_route_info_by_coordinates_api_route_GetRouteInfoByCoordinates_get","parameters":[{"name":"xcoord","in":"query","required":false,"schema":{"type":"number","title":"Longitude or X-Coordinate","description":"**Longitude** <font size='2' color='red'>_[Required]_</font> <sub>(when using geographic coordinates | Ex. -84.899536)<sub> <font size='2'>**or**</font>\n\n**X-Coordinate** <font size='2' color='red'>_[Required]_</font> <sub>(when using projected coordinates | Ex. 5165737.98)<sub>\n\n"},"description":"**Longitude** <font size='2' color='red'>_[Required]_</font> <sub>(when using geographic coordinates | Ex. -84.899536)<sub> <font size='2'>**or**</font>\n\n**X-Coordinate** <font size='2' color='red'>_[Required]_</font> <sub>(when using projected coordinates | Ex. 5165737.98)<sub>\n\n","example":-84.899536},{"name":"ycoord","in":"query","required":false,"schema":{"type":"number","title":"Latitude or Y-coordinate","description":"**Latitude** <font size='2' color='red'>_[Required]_</font> <sub>(when using geographic coordinates | Ex. 38.168369)<sub> <font size='2'>**or**</font>\n\n**Y-Coordinate** <font size='2' color='red'>_[Required]_</font> <sub>(when using projected coordinates | Ex. 3950115.03)<sub>\n\n"},"description":"**Latitude** <font size='2' color='red'>_[Required]_</font> <sub>(when using geographic coordinates | Ex. 38.168369)<sub> <font size='2'>**or**</font>\n\n**Y-Coordinate** <font size='2' color='red'>_[Required]_</font> <sub>(when using projected coordinates | Ex. 3950115.03)<sub>\n\n","example":38.168369},{"name":"snap_distance","in":"query","required":false,"schema":{"type":"integer","maximum":10000,"minimum":0,"title":"Snap Distance/Tolerance","description":"**Snap Distance/Tolerance** <font size='2' color='red'>_[Optional]_</font> <sub>(measured in feet | 100 <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>Points supplied that are within this distance of a line will be snapped.</font><br><br><font size='2'>_Note: Performance will be negatively impacted as snap distance is increased.  It is best to keep snap distance as low as possible (especially when sending lots of requests)._</font><br><font size='2'>_When a small amount of your data has outliers it may be beneficial to do two passes._</font><br><font size='2'>_One with a small snap distance and then do another pass with those that did not snap with a larger snap distance._</font>\n\n","default":100},"description":"**Snap Distance/Tolerance** <font size='2' color='red'>_[Optional]_</font> <sub>(measured in feet | 100 <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>Points supplied that are within this distance of a line will be snapped.</font><br><br><font size='2'>_Note: Performance will be negatively impacted as snap distance is increased.  It is best to keep snap distance as low as possible (especially when sending lots of requests)._</font><br><font size='2'>_When a small amount of your data has outliers it may be beneficial to do two passes._</font><br><font size='2'>_One with a small snap distance and then do another pass with those that did not snap with a larger snap distance._</font>\n\n","example":100},{"name":"heading","in":"query","required":false,"schema":{"anyOf":[{"type":"number","maximum":360,"minimum":0},{"type":"null"}],"title":"Direction","description":"**Heading/Direction** <font size='2' color='red'>_[Optional]_</font> <sub>(value to represent azimuthal direction in degrees | 0-North, 90-East, 180-South, 270-West)<sub>\n\n<font size='2'>When supplied - additional calculations will be performed to compare the heading of the point to the direction of the line (the heading and direction similarity along with distance to the line is used to calculate probability).<br>Supplying a Heading/Direction will significantly increase snapping accuracy.</font><br><font size='2'>When not supplied - only the nearest match will be returned (probablity is calculated based on distance to line).</font>\n\n"},"description":"**Heading/Direction** <font size='2' color='red'>_[Optional]_</font> <sub>(value to represent azimuthal direction in degrees | 0-North, 90-East, 180-South, 270-West)<sub>\n\n<font size='2'>When supplied - additional calculations will be performed to compare the heading of the point to the direction of the line (the heading and direction similarity along with distance to the line is used to calculate probability).<br>Supplying a Heading/Direction will significantly increase snapping accuracy.</font><br><font size='2'>When not supplied - only the nearest match will be returned (probablity is calculated based on distance to line).</font>\n\n","example":164},{"name":"snap_priority_route","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Snap Priority Route","description":"**Snap Priority Route** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True | False <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>Routes are prioritized based on their Route_Type in the following order (from highest to lowest priority): </font><br><font size='2'>I: 1 | PKWY: 2 | US: 3 | KY: 4 | CNTY: 5 | CITY: 6 | FED: 7 | LOCA: 8 | PRIV: 9 | OTHR: 10</font><br><font size='2'>If multiple routes share the same Route_Type priority, the route with the lowest Route_Number takes precedence.</font><br><br><font size='2'>When True & return_multiple parameter is False - returns the single snapped route with the highest priority, as defined above.</font><br><font size='2'>When True & return_multiple parameter is True - returns multiple snapped routes, ordered from highest to lowest priority, as defined above.</font><br><font size='2'>When False <font color='blue'>_(default)_</font> - Returns the snapped route(s) with the highest probability, regardless of route priority.</font>\n\n","default":"False"},"description":"**Snap Priority Route** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True | False <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>Routes are prioritized based on their Route_Type in the following order (from highest to lowest priority): </font><br><font size='2'>I: 1 | PKWY: 2 | US: 3 | KY: 4 | CNTY: 5 | CITY: 6 | FED: 7 | LOCA: 8 | PRIV: 9 | OTHR: 10</font><br><font size='2'>If multiple routes share the same Route_Type priority, the route with the lowest Route_Number takes precedence.</font><br><br><font size='2'>When True & return_multiple parameter is False - returns the single snapped route with the highest priority, as defined above.</font><br><font size='2'>When True & return_multiple parameter is True - returns multiple snapped routes, ordered from highest to lowest priority, as defined above.</font><br><font size='2'>When False <font color='blue'>_(default)_</font> - Returns the snapped route(s) with the highest probability, regardless of route priority.</font>\n\n","example":"False"},{"name":"snap_route_types","in":"query","required":false,"schema":{"type":"string","title":"Snap Route Types","description":"**Snap Route Types** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: I, PKWY, US, KY, CNTY, CITY, FED, LOCA, PRIV, OTHR)<sub>\n\n<font size='2'>A comma separated list of route type(s) to snap to.</font><br><font size='2'>When supplied - the point will only be snapped to these types of routes.</font>\n\n"},"description":"**Snap Route Types** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: I, PKWY, US, KY, CNTY, CITY, FED, LOCA, PRIV, OTHR)<sub>\n\n<font size='2'>A comma separated list of route type(s) to snap to.</font><br><font size='2'>When supplied - the point will only be snapped to these types of routes.</font>\n\n","example":"I, PKWY, US, KY"},{"name":"snap_route_id","in":"query","required":false,"schema":{"type":"string","title":"Snap Route Identifier","description":"**Snap Route Unique Identifier** <font size='2' color='red'>_[Optional]_</font> <sub>(Must follow the Road Centerline Attributes and Codes Metadata [link](https://transportation.ky.gov/Planning/Pages/Road-Centerline-Attributes-and-Codes-Metadata.aspx))<sub>\n\n<font size='2'>The Route Unique Identifier to snap to.</font><br><font size='2'>When supplied - the point will only be snapped to this route.</font>\n\n"},"description":"**Snap Route Unique Identifier** <font size='2' color='red'>_[Optional]_</font> <sub>(Must follow the Road Centerline Attributes and Codes Metadata [link](https://transportation.ky.gov/Planning/Pages/Road-Centerline-Attributes-and-Codes-Metadata.aspx))<sub>\n\n<font size='2'>The Route Unique Identifier to snap to.</font><br><font size='2'>When supplied - the point will only be snapped to this route.</font>\n\n","example":"037-KY-0676  -010"},{"name":"return_multiple","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Return Multiple Snaps","description":"**Return Multiple Snaps** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True | False <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>When True & snap_route_priority is False - returns an array/list of multiple snaps in the order of highest probability (shortest distance when heading is not supplied)</font><br><font size='2'>When True & snap_route_priority is True - returns an array/list of multiple snaps in the order of route priority as defined in snap_route_priority parameter.</font><br><font size='2'>When False <font color='blue'>_(default)_</font> - returns only one snap of either highest probablity or highest route priority dependent on snap_route_priority parameter.</font>\n\n","default":"False"},"description":"**Return Multiple Snaps** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True | False <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>When True & snap_route_priority is False - returns an array/list of multiple snaps in the order of highest probability (shortest distance when heading is not supplied)</font><br><font size='2'>When True & snap_route_priority is True - returns an array/list of multiple snaps in the order of route priority as defined in snap_route_priority parameter.</font><br><font size='2'>When False <font color='blue'>_(default)_</font> - returns only one snap of either highest probablity or highest route priority dependent on snap_route_priority parameter.</font>\n\n","example":"False"},{"name":"return_m","in":"query","required":false,"schema":{"type":"string","title":"Return Geometry Measure","description":"**Return Geometry Measure** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True <font color='blue'>_(default)_</font> | False)<sub>\n\n<font size='2'>When True <font color='blue'>_(default)_</font> - the linear measure values (m value) will be included in the returned geometry (returning x,y,m coordinates)</font><br><font size='2'>When False - the linear measure values (m value) will be excluded in the returned geometry (returning x,y coordinates only)</font>\n\n","default":"True"},"description":"**Return Geometry Measure** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True <font color='blue'>_(default)_</font> | False)<sub>\n\n<font size='2'>When True <font color='blue'>_(default)_</font> - the linear measure values (m value) will be included in the returned geometry (returning x,y,m coordinates)</font><br><font size='2'>When False - the linear measure values (m value) will be excluded in the returned geometry (returning x,y coordinates only)</font>\n\n","example":"True"},{"name":"return_keys","in":"query","required":false,"schema":{"type":"string","title":"Return Keys","description":"**Return Keys** <font size='2' color='red'>_[Optional]_</font> <sub>(A full list of keys and definitions can be found here: [link](https://kytc-api-v100-docs-qrntk7e3ra-uc.a.run.app/app?tabs_main=0))<sub>\n\n<font size='2'>A comma separated list of keys to return.</font><br><font size='2'>When supplied - only those key/values will be returned. (Ordered by in which the keys are supplied)</font><br><font size='2'>When not supplied - all available key/values will be returned. (Ordered by keys alphabetically)</font>\n\n"},"description":"**Return Keys** <font size='2' color='red'>_[Optional]_</font> <sub>(A full list of keys and definitions can be found here: [link](https://kytc-api-v100-docs-qrntk7e3ra-uc.a.run.app/app?tabs_main=0))<sub>\n\n<font size='2'>A comma separated list of keys to return.</font><br><font size='2'>When supplied - only those key/values will be returned. (Ordered by in which the keys are supplied)</font><br><font size='2'>When not supplied - all available key/values will be returned. (Ordered by keys alphabetically)</font>\n\n","example":"County_Name, Route_Unique_Identifier, Route, Road_Name, Milepoint, Snap_Probability, Snap_Distance_Feet, Geometry"},{"name":"return_format","in":"query","required":false,"schema":{"type":"string","title":"Return Format","description":"**Return Format** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: json <font color='blue'>_(default)_</font> | geojson | esrijson)<sub>\n\n<font size='2'>json <font color='blue'>_(default)_</font> - JSON format. [link](https://en.wikipedia.org/wiki/JSON) Geometry will be returned in WKT format within the JSON. [link](https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry) </font><br><font size='2'>geojson - GeoJSON format. [link](https://en.wikipedia.org/wiki/GeoJSON) _(Geometry must be a key in return_keys parameter)_</font><br><font size='2'>esrijson - ESRI JSON format. Feature: [link](https://developers.arcgis.com/documentation/common-data-types/feature-object.htm)  Geometry: [link](https://developers.arcgis.com/documentation/common-data-types/geometry-objects.htm)</font>\n\n","default":"json"},"description":"**Return Format** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: json <font color='blue'>_(default)_</font> | geojson | esrijson)<sub>\n\n<font size='2'>json <font color='blue'>_(default)_</font> - JSON format. [link](https://en.wikipedia.org/wiki/JSON) Geometry will be returned in WKT format within the JSON. [link](https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry) </font><br><font size='2'>geojson - GeoJSON format. [link](https://en.wikipedia.org/wiki/GeoJSON) _(Geometry must be a key in return_keys parameter)_</font><br><font size='2'>esrijson - ESRI JSON format. Feature: [link](https://developers.arcgis.com/documentation/common-data-types/feature-object.htm)  Geometry: [link](https://developers.arcgis.com/documentation/common-data-types/geometry-objects.htm)</font>\n\n","example":"json"},{"name":"request_id","in":"query","required":false,"schema":{"type":"string","title":"Supply and Return a Request Identifier","description":"**Supply and Return a Request Identifier** <font size='2' color='red'>_[Optional]_</font>\n\n<font size='2'>When supplied - The supplied value will be included in the returned json with a key of \"Request_Id\"</font><br><font size='2'>This can assist when threading multiple requests and the returns may not be returned syncronously.</font>\n\n"},"description":"**Supply and Return a Request Identifier** <font size='2' color='red'>_[Optional]_</font>\n\n<font size='2'>When supplied - The supplied value will be included in the returned json with a key of \"Request_Id\"</font><br><font size='2'>This can assist when threading multiple requests and the returns may not be returned syncronously.</font>\n\n","example":"PLBNw5AuokKnX+UrNZcvTQ=="},{"name":"input_epsg","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"EPSG Coordinate System Code","description":"**EPSG Coordinate System Code** <font size='2' color='red'>_[Optional]_</font> <sub>(More info on EPSG [link](https://epsg.io/))<sub>\n\n","examples":{"default":{"summary":"World Geodetic System 1984 (wgs84)","description":"World Geodetic System 1984 _(default)_ [(wgs84)](https://epsg.io/4326.prettywkt)","value":4326},"kysz":{"summary":"Kentucky Single Zone (kysz)","description":"Kentucky Single Zone [(kysz)](https://epsg.io/3089.prettywkt)","value":3089}},"default":4326},"description":"**EPSG Coordinate System Code** <font size='2' color='red'>_[Optional]_</font> <sub>(More info on EPSG [link](https://epsg.io/))<sub>\n\n"},{"name":"output_epsg","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"EPSG Coordinate System Code","description":"**EPSG Coordinate System Code** <font size='2' color='red'>_[Optional]_</font> <sub>(More info on EPSG [link](https://epsg.io/))<sub>\n\n","examples":{"default":{"summary":"World Geodetic System 1984 (wgs84)","description":"World Geodetic System 1984 _(default)_ [(wgs84)](https://epsg.io/4326.prettywkt)","value":4326},"kysz":{"summary":"Kentucky Single Zone (kysz)","description":"Kentucky Single Zone [(kysz)](https://epsg.io/3089.prettywkt)","value":3089}},"default":4326},"description":"**EPSG Coordinate System Code** <font size='2' color='red'>_[Optional]_</font> <sub>(More info on EPSG [link](https://epsg.io/))<sub>\n\n"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/route/GetRouteInfoByRouteAndMP":{"get":{"tags":["Route Services"],"summary":"Get Route Info By Route And Milepoint","description":"<h2>Get Route Information by Route and Milepoint</h2>\n- **Purpose:** Return information about a route by passing a route unique identifier and a milepoint\n- **Return Geometry:** Requested point.","operationId":"get_route_info_by_route_and_milepoint_api_route_GetRouteInfoByRouteAndMP_get","parameters":[{"name":"route_unique_id","in":"query","required":false,"schema":{"type":"string","title":"Route Unique Identifier","description":"**Route Unique Identifier** <font size='2' color='red'>_[Required]_</font> <sub>(Must follow the Road Centerline Attributes and Codes Metadata [link](https://transportation.ky.gov/Planning/Pages/Road-Centerline-Attributes-and-Codes-Metadata.aspx))<sub>\n\n"},"description":"**Route Unique Identifier** <font size='2' color='red'>_[Required]_</font> <sub>(Must follow the Road Centerline Attributes and Codes Metadata [link](https://transportation.ky.gov/Planning/Pages/Road-Centerline-Attributes-and-Codes-Metadata.aspx))<sub>\n\n","example":"037-KY-0676  -010"},{"name":"milepoint","in":"query","required":false,"schema":{"type":"number","maximum":200,"minimum":0,"title":"Milepoint","description":"**Milepoint** <font size='2' color='red'>_[Required]_</font>\n\n"},"description":"**Milepoint** <font size='2' color='red'>_[Required]_</font>\n\n","example":1.335},{"name":"return_m","in":"query","required":false,"schema":{"type":"string","title":"Return Geometry Measure","description":"**Return Geometry Measure** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True <font color='blue'>_(default)_</font> | False)<sub>\n\n<font size='2'>When True <font color='blue'>_(default)_</font> - the linear measure values (m value) will be included in the returned geometry (returning x,y,m coordinates)</font><br><font size='2'>When False - the linear measure values (m value) will be excluded in the returned geometry (returning x,y coordinates only)</font>\n\n","default":"True"},"description":"**Return Geometry Measure** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True <font color='blue'>_(default)_</font> | False)<sub>\n\n<font size='2'>When True <font color='blue'>_(default)_</font> - the linear measure values (m value) will be included in the returned geometry (returning x,y,m coordinates)</font><br><font size='2'>When False - the linear measure values (m value) will be excluded in the returned geometry (returning x,y coordinates only)</font>\n\n","example":"True"},{"name":"return_keys","in":"query","required":false,"schema":{"type":"string","title":"Return Keys","description":"**Return Keys** <font size='2' color='red'>_[Optional]_</font><sub>(A full list of keys and definitions can be found here: [link](https://kytc-api-v100-docs-qrntk7e3ra-uc.a.run.app/app?tabs_main=0))<sub>\n\n<font size='2'>A comma separated list of keys to return.</font><br><font size='2'>When supplied - only those key/values will be returned. (Ordered by in which the keys are supplied)</font><br><font size='2'>When not supplied - all available key/values will be returned. (Ordered by keys alphabetically)</font>\n\n"},"description":"**Return Keys** <font size='2' color='red'>_[Optional]_</font><sub>(A full list of keys and definitions can be found here: [link](https://kytc-api-v100-docs-qrntk7e3ra-uc.a.run.app/app?tabs_main=0))<sub>\n\n<font size='2'>A comma separated list of keys to return.</font><br><font size='2'>When supplied - only those key/values will be returned. (Ordered by in which the keys are supplied)</font><br><font size='2'>When not supplied - all available key/values will be returned. (Ordered by keys alphabetically)</font>\n\n","example":"County_Name, Route_Unique_Identifier, Route, Road_Name, Geometry"},{"name":"return_format","in":"query","required":false,"schema":{"type":"string","title":"Return Format","description":"**Return Format** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: json <font color='blue'>_(default)_</font> | geojson | esrijson)<sub>\n\n<font size='2'>json <font color='blue'>_(default)_</font> - JSON format. [link](https://en.wikipedia.org/wiki/JSON) Geometry will be returned in WKT format within the JSON. [link](https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry) </font><br><font size='2'>geojson - GeoJSON format. [link](https://en.wikipedia.org/wiki/GeoJSON) _(Geometry must be a key in return_keys parameter)_</font><br><font size='2'>esrijson - ESRI JSON format. Feature: [link](https://developers.arcgis.com/documentation/common-data-types/feature-object.htm)  Geometry: [link](https://developers.arcgis.com/documentation/common-data-types/geometry-objects.htm)</font>\n\n","default":"json"},"description":"**Return Format** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: json <font color='blue'>_(default)_</font> | geojson | esrijson)<sub>\n\n<font size='2'>json <font color='blue'>_(default)_</font> - JSON format. [link](https://en.wikipedia.org/wiki/JSON) Geometry will be returned in WKT format within the JSON. [link](https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry) </font><br><font size='2'>geojson - GeoJSON format. [link](https://en.wikipedia.org/wiki/GeoJSON) _(Geometry must be a key in return_keys parameter)_</font><br><font size='2'>esrijson - ESRI JSON format. Feature: [link](https://developers.arcgis.com/documentation/common-data-types/feature-object.htm)  Geometry: [link](https://developers.arcgis.com/documentation/common-data-types/geometry-objects.htm)</font>\n\n","example":"json"},{"name":"request_id","in":"query","required":false,"schema":{"type":"string","title":"Supply and Return a Request Identifier","description":"**Supply and Return a Request Identifier** <font size='2' color='red'>_[Optional]_</font>\n\n<font size='2'>When supplied - The supplied value will be included in the returned json with a key of \"Request_Id\"</font><br><font size='2'>This can assist when threading multiple requests and the returns may not be returned syncronously.</font>\n\n"},"description":"**Supply and Return a Request Identifier** <font size='2' color='red'>_[Optional]_</font>\n\n<font size='2'>When supplied - The supplied value will be included in the returned json with a key of \"Request_Id\"</font><br><font size='2'>This can assist when threading multiple requests and the returns may not be returned syncronously.</font>\n\n","example":"PLBNw5AuokKnX+UrNZcvTQ=="},{"name":"output_epsg","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"EPSG Coordinate System Code","description":"**EPSG Coordinate System Code** <font size='2' color='red'>_[Optional]_</font> <sub>(More info on EPSG [link](https://epsg.io/))<sub>\n\n","examples":{"default":{"summary":"World Geodetic System 1984 (wgs84)","description":"World Geodetic System 1984 _(default)_ [(wgs84)](https://epsg.io/4326.prettywkt)","value":4326},"kysz":{"summary":"Kentucky Single Zone (kysz)","description":"Kentucky Single Zone [(kysz)](https://epsg.io/3089.prettywkt)","value":3089}},"default":4326},"description":"**EPSG Coordinate System Code** <font size='2' color='red'>_[Optional]_</font> <sub>(More info on EPSG [link](https://epsg.io/))<sub>\n\n"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/route/GetRouteInfoByRouteAndTwoMilepoints":{"get":{"tags":["Route Services"],"summary":"Get Route Info By Route And Two Milepoints","description":"<h2>Get Route Information by Route and Two Milepoints</h2>\n- **Purpose:** Return information about a route by passing a route unique identifier and two milepoints\n- **Return Geometry:** Requested line. Depending on the return_keys parameter,\nthe line will be split into an array of lines based on those attributes.\nIn addition, the request can return a full (merged) line segment as well as begin, mid and end points.","operationId":"get_route_info_by_route_and_two_milepoints_api_route_GetRouteInfoByRouteAndTwoMilepoints_get","parameters":[{"name":"route_unique_id","in":"query","required":false,"schema":{"type":"string","title":"Route Unique Identifier","description":"**Route Unique Identifier** <font size='2' color='red'>_[Required]_</font> <sub>(Must follow the Road Centerline Attributes and Codes Metadata [link](https://transportation.ky.gov/Planning/Pages/Road-Centerline-Attributes-and-Codes-Metadata.aspx))<sub>\n\n"},"description":"**Route Unique Identifier** <font size='2' color='red'>_[Required]_</font> <sub>(Must follow the Road Centerline Attributes and Codes Metadata [link](https://transportation.ky.gov/Planning/Pages/Road-Centerline-Attributes-and-Codes-Metadata.aspx))<sub>\n\n","example":"037-KY-0420  -000"},{"name":"begin_mp","in":"query","required":false,"schema":{"type":"number","maximum":200,"minimum":0,"title":"Begin Milepoint","description":"**Begin Milepoint** <font size='2' color='red'>_[Required]_</font>\n\n"},"description":"**Begin Milepoint** <font size='2' color='red'>_[Required]_</font>\n\n","example":1.024},{"name":"end_mp","in":"query","required":false,"schema":{"type":"number","maximum":200,"minimum":0,"title":"End Milepoint","description":"**End Milepoint** <font size='2' color='red'>_[Required]_</font>\n\n"},"description":"**End Milepoint** <font size='2' color='red'>_[Required]_</font>\n\n","example":3.1},{"name":"return_m","in":"query","required":false,"schema":{"type":"string","title":"Return Geometry Measure","description":"**Return Geometry Measure** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True <font color='blue'>_(default)_</font> | False)<sub>\n\n<font size='2'>When True <font color='blue'>_(default)_</font> - the linear measure values (m value) will be included in the returned geometry (returning x,y,m coordinates)</font><br><font size='2'>When False - the linear measure values (m value) will be excluded in the returned geometry (returning x,y coordinates only)</font>\n\n","default":"True"},"description":"**Return Geometry Measure** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True <font color='blue'>_(default)_</font> | False)<sub>\n\n<font size='2'>When True <font color='blue'>_(default)_</font> - the linear measure values (m value) will be included in the returned geometry (returning x,y,m coordinates)</font><br><font size='2'>When False - the linear measure values (m value) will be excluded in the returned geometry (returning x,y coordinates only)</font>\n\n","example":"True"},{"name":"return_direction","in":"query","required":false,"schema":{"type":"string","title":"Return Direction","description":"**Return Drawing Direction** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: mp_ascending <font color='blue'>_(default)_</font> | travel)<sub>\n\n<font size='2'>mp_ascending <font color='blue'>_(default)_</font> - By default the returned geometry will be drawn in the order of ascending mile points regardless of begin_mp/end_mp parameter values.</font><br><font size='2'>travel - The returned geometry will be drawn in the order of travel direction.  For the context of this API call, travel direction is determined by the order of begin_mp/end_mp parameter values.</font>\n\n","default":"mp_ascending"},"description":"**Return Drawing Direction** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: mp_ascending <font color='blue'>_(default)_</font> | travel)<sub>\n\n<font size='2'>mp_ascending <font color='blue'>_(default)_</font> - By default the returned geometry will be drawn in the order of ascending mile points regardless of begin_mp/end_mp parameter values.</font><br><font size='2'>travel - The returned geometry will be drawn in the order of travel direction.  For the context of this API call, travel direction is determined by the order of begin_mp/end_mp parameter values.</font>\n\n","example":"mp_ascending"},{"name":"return_full_geom","in":"query","required":false,"schema":{"type":"string","title":"Return Full Geometry","description":"**Return Full Geometry** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True | False <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>When True - the full (merged routes) geometry will be returned. _(Geometry must be a key in return_keys parameter)_</font><br><font size='2'>When False <font color='blue'>_(default)_</font> - will not be returned.</font>\n\n","default":"False"},"description":"**Return Full Geometry** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True | False <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>When True - the full (merged routes) geometry will be returned. _(Geometry must be a key in return_keys parameter)_</font><br><font size='2'>When False <font color='blue'>_(default)_</font> - will not be returned.</font>\n\n","example":"False"},{"name":"return_points","in":"query","required":false,"schema":{"type":"string","title":"Return Begin, Mid, and End Milepoints","description":"**Return Begin, Mid, and End Milepoints** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True | False <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>When True - the begin mile point, mid mile point and end mile point geometries will be returned</font><br><font size='2'>When False <font color='blue'>_(default)_</font> - only the route geometry will be returned</font>\n\n","default":"False"},"description":"**Return Begin, Mid, and End Milepoints** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True | False <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>When True - the begin mile point, mid mile point and end mile point geometries will be returned</font><br><font size='2'>When False <font color='blue'>_(default)_</font> - only the route geometry will be returned</font>\n\n","example":"False"},{"name":"return_keys","in":"query","required":false,"schema":{"type":"string","title":"Return Keys","description":"**Return Keys** <font size='2' color='red'>_[Optional]_</font><sub>(A full list of keys and definitions can be found here: [link](https://kytc-api-v100-docs-qrntk7e3ra-uc.a.run.app/app?tabs_main=0))<sub>\n\n<font size='2'>A comma separated list of keys to return.</font><br><font size='2'>When supplied - only those key/values will be returned. (Ordered by in which the keys are supplied)</font><br><font size='2'>When not supplied - all available key/values will be returned. (Ordered by keys alphabetically)</font>\n\n"},"description":"**Return Keys** <font size='2' color='red'>_[Optional]_</font><sub>(A full list of keys and definitions can be found here: [link](https://kytc-api-v100-docs-qrntk7e3ra-uc.a.run.app/app?tabs_main=0))<sub>\n\n<font size='2'>A comma separated list of keys to return.</font><br><font size='2'>When supplied - only those key/values will be returned. (Ordered by in which the keys are supplied)</font><br><font size='2'>When not supplied - all available key/values will be returned. (Ordered by keys alphabetically)</font>\n\n","example":"County_Name, Route_Unique_Identifier, Route, Road_Name, Bridge_Identifier, Horizontal_Curve_Direction, Geometry"},{"name":"return_format","in":"query","required":false,"schema":{"type":"string","title":"Return Format","description":"**Return Format** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: json <font color='blue'>_(default)_</font> | geojson | esrijson)<sub>\n\n<font size='2'>json <font color='blue'>_(default)_</font> - JSON format. [link](https://en.wikipedia.org/wiki/JSON) Geometry will be returned in WKT format within the JSON. [link](https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry) </font><br><font size='2'>geojson - GeoJSON format. [link](https://en.wikipedia.org/wiki/GeoJSON) _(Geometry must be a key in return_keys parameter)_</font><br><font size='2'>esrijson - ESRI JSON format. Feature: [link](https://developers.arcgis.com/documentation/common-data-types/feature-object.htm)  Geometry: [link](https://developers.arcgis.com/documentation/common-data-types/geometry-objects.htm)</font>\n\n","default":"json"},"description":"**Return Format** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: json <font color='blue'>_(default)_</font> | geojson | esrijson)<sub>\n\n<font size='2'>json <font color='blue'>_(default)_</font> - JSON format. [link](https://en.wikipedia.org/wiki/JSON) Geometry will be returned in WKT format within the JSON. [link](https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry) </font><br><font size='2'>geojson - GeoJSON format. [link](https://en.wikipedia.org/wiki/GeoJSON) _(Geometry must be a key in return_keys parameter)_</font><br><font size='2'>esrijson - ESRI JSON format. Feature: [link](https://developers.arcgis.com/documentation/common-data-types/feature-object.htm)  Geometry: [link](https://developers.arcgis.com/documentation/common-data-types/geometry-objects.htm)</font>\n\n","example":"json"},{"name":"request_id","in":"query","required":false,"schema":{"type":"string","title":"Supply and Return a Request Identifier","description":"**Supply and Return a Request Identifier** <font size='2' color='red'>_[Optional]_</font>\n\n<font size='2'>When supplied - The supplied value will be included in the returned json with a key of \"Request_Id\"</font><br><font size='2'>This can assist when threading multiple requests and the returns may not be returned syncronously.</font>\n\n"},"description":"**Supply and Return a Request Identifier** <font size='2' color='red'>_[Optional]_</font>\n\n<font size='2'>When supplied - The supplied value will be included in the returned json with a key of \"Request_Id\"</font><br><font size='2'>This can assist when threading multiple requests and the returns may not be returned syncronously.</font>\n\n","example":"PLBNw5AuokKnX+UrNZcvTQ=="},{"name":"output_epsg","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"EPSG Coordinate System Code","description":"**EPSG Coordinate System Code** <font size='2' color='red'>_[Optional]_</font> <sub>(More info on EPSG [link](https://epsg.io/))<sub>\n\n","examples":{"default":{"summary":"World Geodetic System 1984 (wgs84)","description":"World Geodetic System 1984 _(default)_ [(wgs84)](https://epsg.io/4326.prettywkt)","value":4326},"kysz":{"summary":"Kentucky Single Zone (kysz)","description":"Kentucky Single Zone [(kysz)](https://epsg.io/3089.prettywkt)","value":3089}},"default":4326},"description":"**EPSG Coordinate System Code** <font size='2' color='red'>_[Optional]_</font> <sub>(More info on EPSG [link](https://epsg.io/))<sub>\n\n"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/route/GetRouteInfoBySnappingAdjacentLine":{"get":{"tags":["Route Services"],"summary":"Get Route Info By Snapping Adjacent Line","description":"<h2>Get Route Information by Snapping an Adjacent Line</h2>\n- **Purpose:** Return information about a route(s) by passing an adjacent linestring.  Only returns highest snap probability.\n- **Return Geometry:** Snapping a line to a line will return a default geometry type of a line. Depending on the return_keys parameter,\nthe line will be split into an array of lines based on those attributes.\nIn addition, the request can return a full (merged) line segment as well as begin, mid and end points.\n- **Example Python Code** _(synchronous - simpler but slower)_: [link](https://kytc-api-v100-docs-qrntk7e3ra-uc.a.run.app/app?tabs_main=2&code_examples=2)\n- **Example Python Code** _(asynchronous - more complex but faster)_: [link](https://kytc-api-v100-docs-qrntk7e3ra-uc.a.run.app/app?tabs_main=2&code_examples=3)","operationId":"get_route_info_by_snapping_adjacent_line_api_route_GetRouteInfoBySnappingAdjacentLine_get","parameters":[{"name":"input_geom","in":"query","required":false,"schema":{"type":"string","title":"Input Line Geometry","description":"**Input Linestring Geometry** <font size='2' color='red'>_[Required]_</font> <sub>(Well Known Text (WKT) Linestring. [link](https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry))<sub>\n\n<font size='2'>_Note: The linestring must be at least 5 feet in length._</font>\n\n"},"description":"**Input Linestring Geometry** <font size='2' color='red'>_[Required]_</font> <sub>(Well Known Text (WKT) Linestring. [link](https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry))<sub>\n\n<font size='2'>_Note: The linestring must be at least 5 feet in length._</font>\n\n","example":"LINESTRING(-84.8769314376 38.1591728976,-84.8873491375 38.1583799041,-84.8900849906 38.1585570630,-84.8916835872 38.1597212391,-84.8935074894 38.1603454999,-84.8938540584 38.1606515748)"},{"name":"snap_distance","in":"query","required":false,"schema":{"type":"integer","maximum":10000,"minimum":0,"title":"Snap Distance/Tolerance","description":"**Snap Distance/Tolerance** <font size='2' color='red'>_[Optional]_</font> <sub>(measured in feet | 100 <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>Linestrings supplied that are within this distance of a line will be snapped.</font><br><font size='2'>It is most important that the start and end points of the input linestring be within this snap distance.  However, interior vertices do not necessarily (although should) have to fall within this distance.</font><br><br><font size='2'>_Note: Performance will be negatively impacted as snap distance is increased.  It is best to keep snap distance as low as possible (especially when sending lots of requests)._</font><br><font size='2'>_When a small amount of your data has outliers it may be beneficial to do two passes._</font><br><font size='2'>_One with a small snap distance and then do another pass with those that did not snap with a larger snap distance._</font>\n\n","default":100},"description":"**Snap Distance/Tolerance** <font size='2' color='red'>_[Optional]_</font> <sub>(measured in feet | 100 <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>Linestrings supplied that are within this distance of a line will be snapped.</font><br><font size='2'>It is most important that the start and end points of the input linestring be within this snap distance.  However, interior vertices do not necessarily (although should) have to fall within this distance.</font><br><br><font size='2'>_Note: Performance will be negatively impacted as snap distance is increased.  It is best to keep snap distance as low as possible (especially when sending lots of requests)._</font><br><font size='2'>_When a small amount of your data has outliers it may be beneficial to do two passes._</font><br><font size='2'>_One with a small snap distance and then do another pass with those that did not snap with a larger snap distance._</font>\n\n","example":100},{"name":"ext_trim_len_limit","in":"query","required":false,"schema":{"type":"integer","maximum":100000,"minimum":0,"title":"Extend/Trim Length Limit","description":"**Extend/Trim Length Limit** <font size='2' color='red'>_[Optional]_</font> <sub>(measured in feet)<sub>\n\n<font size='2'>Snapped linestrings will ofter fall short of or slightly extend past a road intersection.</font><br><font size='2'>The value set here is a limit to how far a snapped linestring should be extended or trimmed to a road intersection. 100 ft <font color='blue'>_(default)_</font>\n\n","default":100},"description":"**Extend/Trim Length Limit** <font size='2' color='red'>_[Optional]_</font> <sub>(measured in feet)<sub>\n\n<font size='2'>Snapped linestrings will ofter fall short of or slightly extend past a road intersection.</font><br><font size='2'>The value set here is a limit to how far a snapped linestring should be extended or trimmed to a road intersection. 100 ft <font color='blue'>_(default)_</font>\n\n","example":100},{"name":"return_m","in":"query","required":false,"schema":{"type":"string","title":"Return Geometry Measure","description":"**Return Geometry Measure** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True <font color='blue'>_(default)_</font> | False)<sub>\n\n<font size='2'>When True <font color='blue'>_(default)_</font> - the linear measure values (m value) will be included in the returned geometry (returning x,y,m coordinates)</font><br><font size='2'>When False - the linear measure values (m value) will be excluded in the returned geometry (returning x,y coordinates only)</font>\n\n","default":"True"},"description":"**Return Geometry Measure** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True <font color='blue'>_(default)_</font> | False)<sub>\n\n<font size='2'>When True <font color='blue'>_(default)_</font> - the linear measure values (m value) will be included in the returned geometry (returning x,y,m coordinates)</font><br><font size='2'>When False - the linear measure values (m value) will be excluded in the returned geometry (returning x,y coordinates only)</font>\n\n","example":"True"},{"name":"return_full_geom","in":"query","required":false,"schema":{"type":"string","title":"Return Full Geometry","description":"**Return Full Geometry** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True | False <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>When True - the full (merged routes) geometry will be returned. _(Geometry must be a key in return_keys parameter)_</font><br><font size='2'>When False <font color='blue'>_(default)_</font> - will not be returned.</font>\n\n","default":"False"},"description":"**Return Full Geometry** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True | False <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>When True - the full (merged routes) geometry will be returned. _(Geometry must be a key in return_keys parameter)_</font><br><font size='2'>When False <font color='blue'>_(default)_</font> - will not be returned.</font>\n\n","example":"False"},{"name":"return_points","in":"query","required":false,"schema":{"type":"string","title":"Return Begin, Mid, and End Milepoints","description":"**Return Begin, Mid, and End Milepoints** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True | False <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>When True - in addition to the route geometry, the begin mile point, mid mile point and end mile point geometries will be returned. _(Geometry must be a key in return_keys parameter)_</font><br><font size='2'>When False <font color='blue'>_(default)_</font> - only the route geometry will be returned</font>\n\n","default":"False"},"description":"**Return Begin, Mid, and End Milepoints** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True | False <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>When True - in addition to the route geometry, the begin mile point, mid mile point and end mile point geometries will be returned. _(Geometry must be a key in return_keys parameter)_</font><br><font size='2'>When False <font color='blue'>_(default)_</font> - only the route geometry will be returned</font>\n\n","example":"False"},{"name":"return_keys","in":"query","required":false,"schema":{"type":"string","title":"Return Keys","description":"**Return Keys** <font size='2' color='red'>_[Optional]_</font> <sub>(A full list of keys and definitions can be found here: [link](https://kytc-api-v100-docs-qrntk7e3ra-uc.a.run.app/app?tabs_main=0))<sub>\n\n<font size='2'>A comma separated list of keys to return.</font><br><font size='2'>When supplied - only those key/values will be returned. (Ordered by in which the keys are supplied)</font><br><font size='2'>When not supplied - all available key/values will be returned. (Ordered by keys alphabetically)</font>\n\n"},"description":"**Return Keys** <font size='2' color='red'>_[Optional]_</font> <sub>(A full list of keys and definitions can be found here: [link](https://kytc-api-v100-docs-qrntk7e3ra-uc.a.run.app/app?tabs_main=0))<sub>\n\n<font size='2'>A comma separated list of keys to return.</font><br><font size='2'>When supplied - only those key/values will be returned. (Ordered by in which the keys are supplied)</font><br><font size='2'>When not supplied - all available key/values will be returned. (Ordered by keys alphabetically)</font>\n\n","example":"County_Name, Route_Unique_Identifier, Route, Road_Name, Bridge_Identifier, Geometry"},{"name":"return_format","in":"query","required":false,"schema":{"type":"string","title":"Return Format","description":"**Return Format** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: json <font color='blue'>_(default)_</font> | geojson | esrijson)<sub>\n\n<font size='2'>json <font color='blue'>_(default)_</font> - JSON format. [link](https://en.wikipedia.org/wiki/JSON) Geometry will be returned in WKT format within the JSON. [link](https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry) </font><br><font size='2'>geojson - GeoJSON format. [link](https://en.wikipedia.org/wiki/GeoJSON) _(Geometry must be a key in return_keys parameter)_</font><br><font size='2'>esrijson - ESRI JSON format. Feature: [link](https://developers.arcgis.com/documentation/common-data-types/feature-object.htm)  Geometry: [link](https://developers.arcgis.com/documentation/common-data-types/geometry-objects.htm)</font>\n\n","default":"json"},"description":"**Return Format** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: json <font color='blue'>_(default)_</font> | geojson | esrijson)<sub>\n\n<font size='2'>json <font color='blue'>_(default)_</font> - JSON format. [link](https://en.wikipedia.org/wiki/JSON) Geometry will be returned in WKT format within the JSON. [link](https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry) </font><br><font size='2'>geojson - GeoJSON format. [link](https://en.wikipedia.org/wiki/GeoJSON) _(Geometry must be a key in return_keys parameter)_</font><br><font size='2'>esrijson - ESRI JSON format. Feature: [link](https://developers.arcgis.com/documentation/common-data-types/feature-object.htm)  Geometry: [link](https://developers.arcgis.com/documentation/common-data-types/geometry-objects.htm)</font>\n\n","example":"json"},{"name":"request_id","in":"query","required":false,"schema":{"type":"string","title":"Supply and Return a Request Identifier","description":"**Supply and Return a Request Identifier** <font size='2' color='red'>_[Optional]_</font>\n\n<font size='2'>When supplied - The supplied value will be included in the returned json with a key of \"Request_Id\"</font><br><font size='2'>This can assist when threading multiple requests and the returns may not be returned syncronously.</font>\n\n"},"description":"**Supply and Return a Request Identifier** <font size='2' color='red'>_[Optional]_</font>\n\n<font size='2'>When supplied - The supplied value will be included in the returned json with a key of \"Request_Id\"</font><br><font size='2'>This can assist when threading multiple requests and the returns may not be returned syncronously.</font>\n\n","example":"PLBNw5AuokKnX+UrNZcvTQ=="},{"name":"input_epsg","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"EPSG Coordinate System Code","description":"**EPSG Coordinate System Code** <font size='2' color='red'>_[Optional]_</font> <sub>(More info on EPSG [link](https://epsg.io/))<sub>\n\n","examples":{"default":{"summary":"World Geodetic System 1984 (wgs84)","description":"World Geodetic System 1984 _(default)_ [(wgs84)](https://epsg.io/4326.prettywkt)","value":4326},"kysz":{"summary":"Kentucky Single Zone (kysz)","description":"Kentucky Single Zone [(kysz)](https://epsg.io/3089.prettywkt)","value":3089}},"default":4326},"description":"**EPSG Coordinate System Code** <font size='2' color='red'>_[Optional]_</font> <sub>(More info on EPSG [link](https://epsg.io/))<sub>\n\n"},{"name":"output_epsg","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"EPSG Coordinate System Code","description":"**EPSG Coordinate System Code** <font size='2' color='red'>_[Optional]_</font> <sub>(More info on EPSG [link](https://epsg.io/))<sub>\n\n","examples":{"default":{"summary":"World Geodetic System 1984 (wgs84)","description":"World Geodetic System 1984 _(default)_ [(wgs84)](https://epsg.io/4326.prettywkt)","value":4326},"kysz":{"summary":"Kentucky Single Zone (kysz)","description":"Kentucky Single Zone [(kysz)](https://epsg.io/3089.prettywkt)","value":3089}},"default":4326},"description":"**EPSG Coordinate System Code** <font size='2' color='red'>_[Optional]_</font> <sub>(More info on EPSG [link](https://epsg.io/))<sub>\n\n"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/route/GetRouteInfoBySnappingPolygon":{"get":{"tags":["Route Services"],"summary":"Get Route Info By Snapping Polygon","description":"<h2>Get Route Information by Snapping a Polygon</h2>\n- **Purpose:** Return information about a route(s) by passing a polygon.\n- **Return Geometry:** Snapping a polygon to a line will return a default geometry type of a line.\nDepending on the return_keys parameter, the line will be split into an array of lines based on those attributes.\nIn addition, the request can return a full (merged) line segment as well as begin, mid and end points.","operationId":"get_route_info_by_snapping_polygon_api_route_GetRouteInfoBySnappingPolygon_get","parameters":[{"name":"input_geom","in":"query","required":false,"schema":{"type":"string","title":"Input Polygon Geometry","description":"**Input Polygon Geometry** <font size='2' color='red'>_[Required]_</font> <sub>(Well Known Text (WKT) Polygon. [link](https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry))<sub>\n\n<font size='2'>_Note: The polygon must be a valid closing polygon._</font>\n\n"},"description":"**Input Polygon Geometry** <font size='2' color='red'>_[Required]_</font> <sub>(Well Known Text (WKT) Polygon. [link](https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry))<sub>\n\n<font size='2'>_Note: The polygon must be a valid closing polygon._</font>\n\n","example":"POLYGON((-84.80927280327332 38.173500337399595,-84.8102062120105 38.173500337399595,-84.81077484032166 38.17340755896794,-84.81089285751831 38.173120788523335,-84.81078556915772 38.17294366503798,-84.81017402550232 38.17311235408142,-84.80948737999451 38.17328947715681,-84.80927280327332 38.17339069014949,-84.80927280327332 38.173500337399595))"},{"name":"snap_distance","in":"query","required":false,"schema":{"type":"integer","maximum":10000,"minimum":0,"title":"Snap Distance/Tolerance","description":"**Snap Distance/Tolerance** <font size='2' color='red'>_[Optional]_</font> <sub>(measured in feet | 1000 <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>Polygons supplied that are within this distance of a line will be snapped.</font><br><font size='2'>The intent is to snap all points of the exterior boundary of the polygon (provided the polygon is fairly small and near a line).</font><br><font size='2'>This is so that the snapped results will represent the most extent area of the polygon.  Hence the reason for the large defualt snap distance of 1000 feet.</font><br><font size='2'>A smaller snap distance can be used (but not recommended) to return snaps that represent only the edge of the polygon nearest the line.</font><br><font size='2'>Regardless of snap distance, a very large polygon may only return snaps that represent the edge of the polygon nearest the line (up to the snap distance).</font><br><br><font size='2'>_Note: Performance will be negatively impacted as snap distance is increased.  It is best to keep snap distance as low as possible (especially when sending lots of requests)._</font><br><font size='2'>_When a small amount of your data has outliers it may be beneficial to do two passes._</font><br><font size='2'>_One with a small snap distance and then do another pass with those that did not snap with a larger snap distance._</font>\n\n","default":1000},"description":"**Snap Distance/Tolerance** <font size='2' color='red'>_[Optional]_</font> <sub>(measured in feet | 1000 <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>Polygons supplied that are within this distance of a line will be snapped.</font><br><font size='2'>The intent is to snap all points of the exterior boundary of the polygon (provided the polygon is fairly small and near a line).</font><br><font size='2'>This is so that the snapped results will represent the most extent area of the polygon.  Hence the reason for the large defualt snap distance of 1000 feet.</font><br><font size='2'>A smaller snap distance can be used (but not recommended) to return snaps that represent only the edge of the polygon nearest the line.</font><br><font size='2'>Regardless of snap distance, a very large polygon may only return snaps that represent the edge of the polygon nearest the line (up to the snap distance).</font><br><br><font size='2'>_Note: Performance will be negatively impacted as snap distance is increased.  It is best to keep snap distance as low as possible (especially when sending lots of requests)._</font><br><font size='2'>_When a small amount of your data has outliers it may be beneficial to do two passes._</font><br><font size='2'>_One with a small snap distance and then do another pass with those that did not snap with a larger snap distance._</font>\n\n","example":1000},{"name":"return_m","in":"query","required":false,"schema":{"type":"string","title":"Return Geometry Measure","description":"**Return Geometry Measure** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True <font color='blue'>_(default)_</font> | False)<sub>\n\n<font size='2'>When True <font color='blue'>_(default)_</font> - the linear measure values (m value) will be included in the returned geometry (returning x,y,m coordinates)</font><br><font size='2'>When False - the linear measure values (m value) will be excluded in the returned geometry (returning x,y coordinates only)</font>\n\n","default":"True"},"description":"**Return Geometry Measure** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True <font color='blue'>_(default)_</font> | False)<sub>\n\n<font size='2'>When True <font color='blue'>_(default)_</font> - the linear measure values (m value) will be included in the returned geometry (returning x,y,m coordinates)</font><br><font size='2'>When False - the linear measure values (m value) will be excluded in the returned geometry (returning x,y coordinates only)</font>\n\n","example":"True"},{"name":"return_direction","in":"query","required":false,"schema":{"type":"string","title":"Return Direction","description":"**Return Drawing Direction** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: mp_ascending <font color='blue'>_(default)_</font> | travel)<sub>\n\n<font size='2'>mp_ascending <font color='blue'>_(default)_</font> - By default the returned geometry will be drawn in the order of ascending mile points regardless of begin_mp/end_mp parameter values.</font><br><font size='2'>travel - The returned geometry will be drawn in the order of travel direction.  For the context of this API call, travel direction is determined by the order of begin_mp/end_mp parameter values.</font>\n\n","default":"mp_ascending"},"description":"**Return Drawing Direction** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: mp_ascending <font color='blue'>_(default)_</font> | travel)<sub>\n\n<font size='2'>mp_ascending <font color='blue'>_(default)_</font> - By default the returned geometry will be drawn in the order of ascending mile points regardless of begin_mp/end_mp parameter values.</font><br><font size='2'>travel - The returned geometry will be drawn in the order of travel direction.  For the context of this API call, travel direction is determined by the order of begin_mp/end_mp parameter values.</font>\n\n","example":"mp_ascending"},{"name":"return_full_geom","in":"query","required":false,"schema":{"type":"string","title":"Return Full Geometry","description":"**Return Full Geometry** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True | False <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>When True - the full (merged routes) geometry will be returned. _(Geometry must be a key in return_keys parameter)_</font><br><font size='2'>When False <font color='blue'>_(default)_</font> - will not be returned.</font>\n\n","default":"False"},"description":"**Return Full Geometry** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True | False <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>When True - the full (merged routes) geometry will be returned. _(Geometry must be a key in return_keys parameter)_</font><br><font size='2'>When False <font color='blue'>_(default)_</font> - will not be returned.</font>\n\n","example":"False"},{"name":"return_points","in":"query","required":false,"schema":{"type":"string","title":"Return Begin, Mid, and End Milepoints","description":"**Return Begin, Mid, and End Milepoints** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True | False <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>When True - in addition to the route geometry, the begin mile point, mid mile point and end mile point geometries will be returned. _(Geometry must be a key in return_keys parameter)_</font><br><font size='2'>When False <font color='blue'>_(default)_</font> - only the route geometry will be returned</font>\n\n","default":"False"},"description":"**Return Begin, Mid, and End Milepoints** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True | False <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>When True - in addition to the route geometry, the begin mile point, mid mile point and end mile point geometries will be returned. _(Geometry must be a key in return_keys parameter)_</font><br><font size='2'>When False <font color='blue'>_(default)_</font> - only the route geometry will be returned</font>\n\n","example":"False"},{"name":"return_keys","in":"query","required":false,"schema":{"type":"string","title":"Return Keys","description":"**Return Keys** <font size='2' color='red'>_[Optional]_</font> <sub>(A full list of keys and definitions can be found here: [link](https://kytc-api-v100-docs-qrntk7e3ra-uc.a.run.app/app?tabs_main=0))<sub>\n\n<font size='2'>A comma separated list of keys to return.</font><br><font size='2'>When supplied - only those key/values will be returned. (Ordered by in which the keys are supplied)</font><br><font size='2'>When not supplied - all available key/values will be returned. (Ordered by keys alphabetically)</font>\n\n"},"description":"**Return Keys** <font size='2' color='red'>_[Optional]_</font> <sub>(A full list of keys and definitions can be found here: [link](https://kytc-api-v100-docs-qrntk7e3ra-uc.a.run.app/app?tabs_main=0))<sub>\n\n<font size='2'>A comma separated list of keys to return.</font><br><font size='2'>When supplied - only those key/values will be returned. (Ordered by in which the keys are supplied)</font><br><font size='2'>When not supplied - all available key/values will be returned. (Ordered by keys alphabetically)</font>\n\n","example":"County_Name, Route_Unique_Identifier, Route, Road_Name, Bridge_Identifier, Geometry"},{"name":"return_multiple","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Return Multiple Snaps","description":"**Return Multiple Snaps** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True | False <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>When True - an array/list of multiple snaps (up to 5 returns) will be returned in the order of highest probability.  Snap probability is normalized with the highest being 1 and lowest being 0.</font><br><font size='2'>When False <font color='blue'>_(default)_</font> - returns only one snap of highest probability</font>\n\n","default":"False"},"description":"**Return Multiple Snaps** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True | False <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>When True - an array/list of multiple snaps (up to 5 returns) will be returned in the order of highest probability.  Snap probability is normalized with the highest being 1 and lowest being 0.</font><br><font size='2'>When False <font color='blue'>_(default)_</font> - returns only one snap of highest probability</font>\n\n","example":"False"},{"name":"return_format","in":"query","required":false,"schema":{"type":"string","title":"Return Format","description":"**Return Format** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: json <font color='blue'>_(default)_</font> | geojson | esrijson)<sub>\n\n<font size='2'>json <font color='blue'>_(default)_</font> - JSON format. [link](https://en.wikipedia.org/wiki/JSON) Geometry will be returned in WKT format within the JSON. [link](https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry) </font><br><font size='2'>geojson - GeoJSON format. [link](https://en.wikipedia.org/wiki/GeoJSON) _(Geometry must be a key in return_keys parameter)_</font><br><font size='2'>esrijson - ESRI JSON format. Feature: [link](https://developers.arcgis.com/documentation/common-data-types/feature-object.htm)  Geometry: [link](https://developers.arcgis.com/documentation/common-data-types/geometry-objects.htm)</font>\n\n","default":"json"},"description":"**Return Format** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: json <font color='blue'>_(default)_</font> | geojson | esrijson)<sub>\n\n<font size='2'>json <font color='blue'>_(default)_</font> - JSON format. [link](https://en.wikipedia.org/wiki/JSON) Geometry will be returned in WKT format within the JSON. [link](https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry) </font><br><font size='2'>geojson - GeoJSON format. [link](https://en.wikipedia.org/wiki/GeoJSON) _(Geometry must be a key in return_keys parameter)_</font><br><font size='2'>esrijson - ESRI JSON format. Feature: [link](https://developers.arcgis.com/documentation/common-data-types/feature-object.htm)  Geometry: [link](https://developers.arcgis.com/documentation/common-data-types/geometry-objects.htm)</font>\n\n","example":"json"},{"name":"request_id","in":"query","required":false,"schema":{"type":"string","title":"Supply and Return a Request Identifier","description":"**Supply and Return a Request Identifier** <font size='2' color='red'>_[Optional]_</font>\n\n<font size='2'>When supplied - The supplied value will be included in the returned json with a key of \"Request_Id\"</font><br><font size='2'>This can assist when threading multiple requests and the returns may not be returned syncronously.</font>\n\n"},"description":"**Supply and Return a Request Identifier** <font size='2' color='red'>_[Optional]_</font>\n\n<font size='2'>When supplied - The supplied value will be included in the returned json with a key of \"Request_Id\"</font><br><font size='2'>This can assist when threading multiple requests and the returns may not be returned syncronously.</font>\n\n","example":"PLBNw5AuokKnX+UrNZcvTQ=="},{"name":"input_epsg","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"EPSG Coordinate System Code","description":"**EPSG Coordinate System Code** <font size='2' color='red'>_[Optional]_</font> <sub>(More info on EPSG [link](https://epsg.io/))<sub>\n\n","examples":{"default":{"summary":"World Geodetic System 1984 (wgs84)","description":"World Geodetic System 1984 _(default)_ [(wgs84)](https://epsg.io/4326.prettywkt)","value":4326},"kysz":{"summary":"Kentucky Single Zone (kysz)","description":"Kentucky Single Zone [(kysz)](https://epsg.io/3089.prettywkt)","value":3089}},"default":4326},"description":"**EPSG Coordinate System Code** <font size='2' color='red'>_[Optional]_</font> <sub>(More info on EPSG [link](https://epsg.io/))<sub>\n\n"},{"name":"output_epsg","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"EPSG Coordinate System Code","description":"**EPSG Coordinate System Code** <font size='2' color='red'>_[Optional]_</font> <sub>(More info on EPSG [link](https://epsg.io/))<sub>\n\n","examples":{"default":{"summary":"World Geodetic System 1984 (wgs84)","description":"World Geodetic System 1984 _(default)_ [(wgs84)](https://epsg.io/4326.prettywkt)","value":4326},"kysz":{"summary":"Kentucky Single Zone (kysz)","description":"Kentucky Single Zone [(kysz)](https://epsg.io/3089.prettywkt)","value":3089}},"default":4326},"description":"**EPSG Coordinate System Code** <font size='2' color='red'>_[Optional]_</font> <sub>(More info on EPSG [link](https://epsg.io/))<sub>\n\n"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/route/GetGeometryByRouteAndTwoMilepoints":{"get":{"tags":["Route Services"],"summary":"Get Geometry By Route And Two Milepoints","description":"<h2>Get Route Geometry by Route and Two Milepoints</h2>\n- **Purpose:** Returns route geometry based on route unique identifier and begin/end milepoints\n- **Return Geometry:** Requested line.","operationId":"get_geometry_by_route_and_two_milepoints_api_route_GetGeometryByRouteAndTwoMilepoints_get","parameters":[{"name":"route_unique_id","in":"query","required":false,"schema":{"type":"string","title":"Route Unique Identifier","description":"**Route Unique Identifier** <font size='2' color='red'>_[Required]_</font> <sub>(Must follow the Road Centerline Attributes and Codes Metadata [link](https://transportation.ky.gov/Planning/Pages/Road-Centerline-Attributes-and-Codes-Metadata.aspx))<sub>\n\n"},"description":"**Route Unique Identifier** <font size='2' color='red'>_[Required]_</font> <sub>(Must follow the Road Centerline Attributes and Codes Metadata [link](https://transportation.ky.gov/Planning/Pages/Road-Centerline-Attributes-and-Codes-Metadata.aspx))<sub>\n\n","example":"037-KY-0420  -000"},{"name":"begin_mp","in":"query","required":false,"schema":{"type":"number","maximum":200,"minimum":0,"title":"Begin Milepoint","description":"**Begin Milepoint** <font size='2' color='red'>_[Required]_</font>\n\n"},"description":"**Begin Milepoint** <font size='2' color='red'>_[Required]_</font>\n\n","example":1.024},{"name":"end_mp","in":"query","required":false,"schema":{"type":"number","maximum":200,"minimum":0,"title":"End Milepoint","description":"**End Milepoint** <font size='2' color='red'>_[Required]_</font>\n\n"},"description":"**End Milepoint** <font size='2' color='red'>_[Required]_</font>\n\n","example":3.1},{"name":"return_m","in":"query","required":false,"schema":{"type":"string","title":"Return Geometry Measure","description":"**Return Geometry Measure** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True <font color='blue'>_(default)_</font> | False)<sub>\n\n<font size='2'>When True <font color='blue'>_(default)_</font> - the linear measure values (m value) will be included in the returned geometry (returning x,y,m coordinates)</font><br><font size='2'>When False - the linear measure values (m value) will be excluded in the returned geometry (returning x,y coordinates only)</font>\n\n","default":"True"},"description":"**Return Geometry Measure** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True <font color='blue'>_(default)_</font> | False)<sub>\n\n<font size='2'>When True <font color='blue'>_(default)_</font> - the linear measure values (m value) will be included in the returned geometry (returning x,y,m coordinates)</font><br><font size='2'>When False - the linear measure values (m value) will be excluded in the returned geometry (returning x,y coordinates only)</font>\n\n","example":"True"},{"name":"return_direction","in":"query","required":false,"schema":{"type":"string","title":"Return Direction","description":"**Return Drawing Direction** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: mp_ascending <font color='blue'>_(default)_</font> | travel)<sub>\n\n<font size='2'>mp_ascending <font color='blue'>_(default)_</font> - By default the returned geometry will be drawn in the order of ascending mile points regardless of begin_mp/end_mp parameter values.</font><br><font size='2'>travel - The returned geometry will be drawn in the order of travel direction.  For the context of this API call, travel direction is determined by the order of begin_mp/end_mp parameter values.</font>\n\n","default":"mp_ascending"},"description":"**Return Drawing Direction** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: mp_ascending <font color='blue'>_(default)_</font> | travel)<sub>\n\n<font size='2'>mp_ascending <font color='blue'>_(default)_</font> - By default the returned geometry will be drawn in the order of ascending mile points regardless of begin_mp/end_mp parameter values.</font><br><font size='2'>travel - The returned geometry will be drawn in the order of travel direction.  For the context of this API call, travel direction is determined by the order of begin_mp/end_mp parameter values.</font>\n\n","example":"mp_ascending"},{"name":"return_points","in":"query","required":false,"schema":{"type":"string","title":"Return Begin, Mid, and End Milepoints","description":"**Return Begin, Mid, and End Milepoints** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True | False <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>When True - in addition to the route geometry, the begin mile point, mid mile point and end mile point geometries will be returned. _(Geometry must be a key in return_keys parameter)_</font><br><font size='2'>When False <font color='blue'>_(default)_</font> - only the route geometry will be returned</font>\n\n","default":"False"},"description":"**Return Begin, Mid, and End Milepoints** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True | False <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>When True - in addition to the route geometry, the begin mile point, mid mile point and end mile point geometries will be returned. _(Geometry must be a key in return_keys parameter)_</font><br><font size='2'>When False <font color='blue'>_(default)_</font> - only the route geometry will be returned</font>\n\n","example":"False"},{"name":"return_format","in":"query","required":false,"schema":{"type":"string","title":"Return Format","description":"**Return Format** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: json <font color='blue'>_(default)_</font> | geojson | esrijson)<sub>\n\n<font size='2'>json <font color='blue'>_(default)_</font> - JSON format. [link](https://en.wikipedia.org/wiki/JSON) Geometry will be returned in WKT format within the JSON. [link](https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry) </font><br><font size='2'>geojson - GeoJSON format. [link](https://en.wikipedia.org/wiki/GeoJSON) _(Geometry must be a key in return_keys parameter)_</font><br><font size='2'>esrijson - ESRI JSON format. Feature: [link](https://developers.arcgis.com/documentation/common-data-types/feature-object.htm)  Geometry: [link](https://developers.arcgis.com/documentation/common-data-types/geometry-objects.htm)</font>\n\n","default":"json"},"description":"**Return Format** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: json <font color='blue'>_(default)_</font> | geojson | esrijson)<sub>\n\n<font size='2'>json <font color='blue'>_(default)_</font> - JSON format. [link](https://en.wikipedia.org/wiki/JSON) Geometry will be returned in WKT format within the JSON. [link](https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry) </font><br><font size='2'>geojson - GeoJSON format. [link](https://en.wikipedia.org/wiki/GeoJSON) _(Geometry must be a key in return_keys parameter)_</font><br><font size='2'>esrijson - ESRI JSON format. Feature: [link](https://developers.arcgis.com/documentation/common-data-types/feature-object.htm)  Geometry: [link](https://developers.arcgis.com/documentation/common-data-types/geometry-objects.htm)</font>\n\n","example":"json"},{"name":"request_id","in":"query","required":false,"schema":{"type":"string","title":"Supply and Return a Request Identifier","description":"**Supply and Return a Request Identifier** <font size='2' color='red'>_[Optional]_</font>\n\n<font size='2'>When supplied - The supplied value will be included in the returned json with a key of \"Request_Id\"</font><br><font size='2'>This can assist when threading multiple requests and the returns may not be returned syncronously.</font>\n\n"},"description":"**Supply and Return a Request Identifier** <font size='2' color='red'>_[Optional]_</font>\n\n<font size='2'>When supplied - The supplied value will be included in the returned json with a key of \"Request_Id\"</font><br><font size='2'>This can assist when threading multiple requests and the returns may not be returned syncronously.</font>\n\n","example":"PLBNw5AuokKnX+UrNZcvTQ=="},{"name":"output_epsg","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"EPSG Coordinate System Code","description":"**EPSG Coordinate System Code** <font size='2' color='red'>_[Optional]_</font> <sub>(More info on EPSG [link](https://epsg.io/))<sub>\n\n","examples":{"default":{"summary":"World Geodetic System 1984 (wgs84)","description":"World Geodetic System 1984 _(default)_ [(wgs84)](https://epsg.io/4326.prettywkt)","value":4326},"kysz":{"summary":"Kentucky Single Zone (kysz)","description":"Kentucky Single Zone [(kysz)](https://epsg.io/3089.prettywkt)","value":3089}},"default":4326},"description":"**EPSG Coordinate System Code** <font size='2' color='red'>_[Optional]_</font> <sub>(More info on EPSG [link](https://epsg.io/))<sub>\n\n"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/route/RouteUniqueIdentifierParser":{"get":{"tags":["Route Services"],"summary":"Route Unique Identifier Parser","description":"<h2>Route Unique Identifier Parser</h2>\n- **Purpose:** Return a parsed route unique identifier\n- **Notes:** Must follow the Road Centerline Attributes and Codes Metadata [link](https://transportation.ky.gov/Planning/Pages/Road-Centerline-Attributes-and-Codes-Metadata.aspx)","operationId":"route_unique_identifier_parser_api_route_RouteUniqueIdentifierParser_get","parameters":[{"name":"route_unique_id","in":"query","required":false,"schema":{"type":"string","title":"Route Unique Identifier","description":"**Route Unique Identifier** <font size='2' color='red'>_[Required]_</font> <sub>(Must follow the Road Centerline Attributes and Codes Metadata [link](https://transportation.ky.gov/Planning/Pages/Road-Centerline-Attributes-and-Codes-Metadata.aspx))<sub>\n\n"},"description":"**Route Unique Identifier** <font size='2' color='red'>_[Required]_</font> <sub>(Must follow the Road Centerline Attributes and Codes Metadata [link](https://transportation.ky.gov/Planning/Pages/Road-Centerline-Attributes-and-Codes-Metadata.aspx))<sub>\n\n","example":"056-US-0031W -010"},{"name":"valid_routes_only","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Valid Routes Only","description":"**Valid Routes Only** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True <font color='blue'>_(default)_</font> | False)<sub>\n\n<font size='2'>When True <font color='blue'>_(default)_</font> - the passed route_unique_id will be validated against the current road network for existance before parsing.</font><br><font size='2'>When False - the route will be parsed without validating its existance. (good for when processing older data where the route may no longer exist in the current road network)</font>\n\n","default":"True"},"description":"**Valid Routes Only** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True <font color='blue'>_(default)_</font> | False)<sub>\n\n<font size='2'>When True <font color='blue'>_(default)_</font> - the passed route_unique_id will be validated against the current road network for existance before parsing.</font><br><font size='2'>When False - the route will be parsed without validating its existance. (good for when processing older data where the route may no longer exist in the current road network)</font>\n\n","example":"True"},{"name":"request_id","in":"query","required":false,"schema":{"type":"string","title":"Supply and Return a Request Identifier","description":"**Supply and Return a Request Identifier** <font size='2' color='red'>_[Optional]_</font>\n\n<font size='2'>When supplied - The supplied value will be included in the returned json with a key of \"Request_Id\"</font><br><font size='2'>This can assist when threading multiple requests and the returns may not be returned syncronously.</font>\n\n"},"description":"**Supply and Return a Request Identifier** <font size='2' color='red'>_[Optional]_</font>\n\n<font size='2'>When supplied - The supplied value will be included in the returned json with a key of \"Request_Id\"</font><br><font size='2'>This can assist when threading multiple requests and the returns may not be returned syncronously.</font>\n\n","example":"PLBNw5AuokKnX+UrNZcvTQ=="}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/route/DatedRouteIdParser":{"get":{"tags":["Route Services"],"summary":"Dated Route Id Parser","description":"<h2>Linear Referencing System (LRS) Identifier or Retail Service Oriented Architecture Enabler (RSE) Identifier parser</h2>\n- **Purpose:** Return a parsed Linear Referencing System (LRS) Identifier or Retail Service Oriented Architecture Enabler Unique (RSE) Identifier and corresponding route unique identifier","operationId":"dated_route_id_parser_api_route_DatedRouteIdParser_get","parameters":[{"name":"route_id","in":"query","required":false,"schema":{"type":"string","title":"Route Identifier","description":"**Linear Referencing System (LRS) Identifier or Retail Service Oriented Architecture Enabler (RSE) Identifier** <font size='2' color='red'>_[Required]_</font>\n\n"},"description":"**Linear Referencing System (LRS) Identifier or Retail Service Oriented Architecture Enabler (RSE) Identifier** <font size='2' color='red'>_[Required]_</font>\n\n","example":"003 US-127B-10"},{"name":"request_id","in":"query","required":false,"schema":{"type":"string","title":"Supply and Return a Request Identifier","description":"**Supply and Return a Request Identifier** <font size='2' color='red'>_[Optional]_</font>\n\n<font size='2'>When supplied - The supplied value will be included in the returned json with a key of \"Request_Id\"</font><br><font size='2'>This can assist when threading multiple requests and the returns may not be returned syncronously.</font>\n\n"},"description":"**Supply and Return a Request Identifier** <font size='2' color='red'>_[Optional]_</font>\n\n<font size='2'>When supplied - The supplied value will be included in the returned json with a key of \"Request_Id\"</font><br><font size='2'>This can assist when threading multiple requests and the returns may not be returned syncronously.</font>\n\n","example":"PLBNw5AuokKnX+UrNZcvTQ=="}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/route/GetCurrentRouteInfoFromDatedRoute":{"get":{"tags":["Route Services"],"summary":"Get Current Route Info From Dated Route","description":"<h2>Get current route information from a dated route and milepoint(s)</h2>\n- **Purpose:** Return current route information by passing a route (Route Unique Identifier, Linear Referencing System (LRS) Identifier or Retail Service Oriented Architecture Enabler (RSE) Identifier), milepoint(s) and date.\n- **Return Geometry:** Snapped point or Snapped line","operationId":"get_current_route_info_from_dated_route_api_route_GetCurrentRouteInfoFromDatedRoute_get","parameters":[{"name":"route_id","in":"query","required":false,"schema":{"type":"string","title":"Route Identifier","description":"**Route Unique Identifier, Linear Referencing System (LRS) Identifier or Retail Service Oriented Architecture Enabler (RSE) Identifier** <font size='2' color='red'>_[Required]_</font>\n\n<font size='2'>_Note: If sending multiple requests, group/order by route_id before requesting.  This allows for caching of the route snapshot and will result in improved performance._</font><br><br>"},"description":"**Route Unique Identifier, Linear Referencing System (LRS) Identifier or Retail Service Oriented Architecture Enabler (RSE) Identifier** <font size='2' color='red'>_[Required]_</font>\n\n<font size='2'>_Note: If sending multiple requests, group/order by route_id before requesting.  This allows for caching of the route snapshot and will result in improved performance._</font><br><br>","example":"008 KY-237"},{"name":"milepoint","in":"query","required":false,"schema":{"type":"number","maximum":200,"minimum":0,"title":"Milepoint","description":"**Milepoint** <font size='2' color='red'>_[Required - if updating points]_</font>\n\n<font size='2'>_Note: If milepoint is passed as a parameter, begin_mp & end_mp can not be passed as parameters_</font><br><br>"},"description":"**Milepoint** <font size='2' color='red'>_[Required - if updating points]_</font>\n\n<font size='2'>_Note: If milepoint is passed as a parameter, begin_mp & end_mp can not be passed as parameters_</font><br><br>","example":4.7},{"name":"begin_mp","in":"query","required":false,"schema":{"type":"number","maximum":200,"minimum":0,"title":"Begin Milepoint","description":"**Begin Milepoint** <font size='2' color='red'>_[Required - if updating lines]_</font>\n\n<font size='2'>_Note: If begin_mp & end_mp are passed as a parameters, milepoint can not be passed as parameter_</font><br><br>"},"description":"**Begin Milepoint** <font size='2' color='red'>_[Required - if updating lines]_</font>\n\n<font size='2'>_Note: If begin_mp & end_mp are passed as a parameters, milepoint can not be passed as parameter_</font><br><br>","example":4},{"name":"end_mp","in":"query","required":false,"schema":{"type":"number","maximum":200,"minimum":0,"title":"End Milepoint","description":"**End Milepoint** <font size='2' color='red'>_[Required - if updating lines]_</font>\n\n<font size='2'>_Note: If end_mp & begin_mp are passed as a parameters, milepoint can not be passed as parameter_</font><br><br>"},"description":"**End Milepoint** <font size='2' color='red'>_[Required - if updating lines]_</font>\n\n<font size='2'>_Note: If end_mp & begin_mp are passed as a parameters, milepoint can not be passed as parameter_</font><br><br>","example":6},{"name":"reference_date","in":"query","required":false,"schema":{"type":"string","title":"Route Reference Date","description":"**Reference Date of the Route Identifier (Route Unique Identifier, LRS id, RSE id)** <font size='2' color='red'>_[Required]_ </font><sub>(Valid format: YYYY-MM-DD)<sub>\n\n<font size='2'>The reference date will define which route snapshot year-month-day (YYYY-MM-DD) that will be used to determine the dated location before updating to current route info.</font><br><font size='2'>The reference date can represent one of two dates:</font><br><br><font size='2'>- An exact snapshot date from the following list of dates:  <br><br>2009-05-14, 2010-06-20, 2012-01-01, 2012-07-15, 2013-03-03, 2013-12-29, 2014-06-29, 2014-12-21, 2015-06-21, 2016-01-03, 2016-05-22, 2016-12-25, 2017-06-04, 2018-01-06, 2018-05-26, 2018-12-29, 2019-06-15, 2019-12-21, 2020-06-27, 2021-06-05, 2021-12-25, 2022-06-04, 2023-01-07, 2023-06-03, 2024-01-06, 2024-06-01</font><br><br><font size='2'>- A date from the timestamp the original record was captured.  The API will then determine the nearest preceding snapshot date to use.</font>\n\n"},"description":"**Reference Date of the Route Identifier (Route Unique Identifier, LRS id, RSE id)** <font size='2' color='red'>_[Required]_ </font><sub>(Valid format: YYYY-MM-DD)<sub>\n\n<font size='2'>The reference date will define which route snapshot year-month-day (YYYY-MM-DD) that will be used to determine the dated location before updating to current route info.</font><br><font size='2'>The reference date can represent one of two dates:</font><br><br><font size='2'>- An exact snapshot date from the following list of dates:  <br><br>2009-05-14, 2010-06-20, 2012-01-01, 2012-07-15, 2013-03-03, 2013-12-29, 2014-06-29, 2014-12-21, 2015-06-21, 2016-01-03, 2016-05-22, 2016-12-25, 2017-06-04, 2018-01-06, 2018-05-26, 2018-12-29, 2019-06-15, 2019-12-21, 2020-06-27, 2021-06-05, 2021-12-25, 2022-06-04, 2023-01-07, 2023-06-03, 2024-01-06, 2024-06-01</font><br><br><font size='2'>- A date from the timestamp the original record was captured.  The API will then determine the nearest preceding snapshot date to use.</font>\n\n","example":"2022-02-17"},{"name":"snap_distance","in":"query","required":false,"schema":{"type":"integer","maximum":10000,"minimum":0,"title":"Snap Distance/Tolerance","description":"**Snap Distance/Tolerance** <font size='2' color='red'>_[Optional]_</font> <sub>(measured in feet | 100 <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>Points supplied that are within this distance of a line will be snapped.</font><br><br><font size='2'>_Note: Performance will be negatively impacted as snap distance is increased.  It is best to keep snap distance as low as possible (especially when sending lots of requests)._</font><br><font size='2'>_When a small amount of your data has outliers it may be beneficial to do two passes._</font><br><font size='2'>_One with a small snap distance and then do another pass with those that did not snap with a larger snap distance._</font>\n\n","default":100},"description":"**Snap Distance/Tolerance** <font size='2' color='red'>_[Optional]_</font> <sub>(measured in feet | 100 <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>Points supplied that are within this distance of a line will be snapped.</font><br><br><font size='2'>_Note: Performance will be negatively impacted as snap distance is increased.  It is best to keep snap distance as low as possible (especially when sending lots of requests)._</font><br><font size='2'>_When a small amount of your data has outliers it may be beneficial to do two passes._</font><br><font size='2'>_One with a small snap distance and then do another pass with those that did not snap with a larger snap distance._</font>\n\n","example":200},{"name":"return_m","in":"query","required":false,"schema":{"type":"string","title":"Return Geometry Measure","description":"**Return Geometry Measure** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True <font color='blue'>_(default)_</font> | False)<sub>\n\n<font size='2'>When True <font color='blue'>_(default)_</font> - the linear measure values (m value) will be included in the returned geometry (returning x,y,m coordinates)</font><br><font size='2'>When False - the linear measure values (m value) will be excluded in the returned geometry (returning x,y coordinates only)</font>\n\n","default":"True"},"description":"**Return Geometry Measure** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True <font color='blue'>_(default)_</font> | False)<sub>\n\n<font size='2'>When True <font color='blue'>_(default)_</font> - the linear measure values (m value) will be included in the returned geometry (returning x,y,m coordinates)</font><br><font size='2'>When False - the linear measure values (m value) will be excluded in the returned geometry (returning x,y coordinates only)</font>\n\n","example":"True"},{"name":"return_full_geom","in":"query","required":false,"schema":{"type":"string","title":"Return Full Geometry","description":"**Return Full Geometry** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True | False <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>When True - the full (merged routes) geometry will be returned. _(Geometry must be a key in return_keys parameter)_</font><br><font size='2'>When False <font color='blue'>_(default)_</font> - will not be returned.</font>\n\n","default":"False"},"description":"**Return Full Geometry** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True | False <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>When True - the full (merged routes) geometry will be returned. _(Geometry must be a key in return_keys parameter)_</font><br><font size='2'>When False <font color='blue'>_(default)_</font> - will not be returned.</font>\n\n","example":"False"},{"name":"return_points","in":"query","required":false,"schema":{"type":"string","title":"Return Begin, Mid, and End Milepoints","description":"**Return Begin, Mid, and End Milepoints** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True | False <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>When True - the begin mile point, mid mile point and end mile point geometries will be returned</font><br><font size='2'>When False <font color='blue'>_(default)_</font> - only the route geometry will be returned</font>\n\n","default":"False"},"description":"**Return Begin, Mid, and End Milepoints** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True | False <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>When True - the begin mile point, mid mile point and end mile point geometries will be returned</font><br><font size='2'>When False <font color='blue'>_(default)_</font> - only the route geometry will be returned</font>\n\n","example":"False"},{"name":"return_keys","in":"query","required":false,"schema":{"type":"string","title":"Return Keys","description":"**Return Keys** <font size='2' color='red'>_[Optional]_</font> <sub>(A full list of keys and definitions can be found here: [link](https://kytc-api-v100-docs-qrntk7e3ra-uc.a.run.app/app?tabs_main=0))<sub>\n\n<font size='2'>_Note:  Route_Unique_Identfier and Geometry *MUST* be in the list of return_keys for this API call._</font><br><br><font size='2'>A comma separated list of keys to return.</font><br><font size='2'>When supplied - only those key/values will be returned. (Ordered by in which the keys are supplied)</font><br><font size='2'>When not supplied - all available key/values will be returned. (Ordered by keys alphabetically)</font>\n\n"},"description":"**Return Keys** <font size='2' color='red'>_[Optional]_</font> <sub>(A full list of keys and definitions can be found here: [link](https://kytc-api-v100-docs-qrntk7e3ra-uc.a.run.app/app?tabs_main=0))<sub>\n\n<font size='2'>_Note:  Route_Unique_Identfier and Geometry *MUST* be in the list of return_keys for this API call._</font><br><br><font size='2'>A comma separated list of keys to return.</font><br><font size='2'>When supplied - only those key/values will be returned. (Ordered by in which the keys are supplied)</font><br><font size='2'>When not supplied - all available key/values will be returned. (Ordered by keys alphabetically)</font>\n\n","example":"County_Name, Route_Unique_Identifier, Route, Road_Name, Milepoint, Snap_Probability, Geometry"},{"name":"return_dated_route_info","in":"query","required":false,"schema":{"type":"string","title":"Return Dated Route Information","description":"**Return Dated Route Information** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True | False <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>When True - Information about the dated route will be returned</font><br><font size='2'>When False <font color='blue'>_(default)_</font> - Dated Route Information will not be returned</font>\n\n","default":"False"},"description":"**Return Dated Route Information** <font size='2' color='red'>_[Optional]_</font> <sub>(Valid values: True | False <font color='blue'>_(default)_</font>)<sub>\n\n<font size='2'>When True - Information about the dated route will be returned</font><br><font size='2'>When False <font color='blue'>_(default)_</font> - Dated Route Information will not be returned</font>\n\n","example":"False"},{"name":"request_id","in":"query","required":false,"schema":{"type":"string","title":"Supply and Return a Request Identifier","description":"**Supply and Return a Request Identifier** <font size='2' color='red'>_[Optional]_</font>\n\n<font size='2'>When supplied - The supplied value will be included in the returned json with a key of \"Request_Id\"</font><br><font size='2'>This can assist when threading multiple requests and the returns may not be returned syncronously.</font>\n\n"},"description":"**Supply and Return a Request Identifier** <font size='2' color='red'>_[Optional]_</font>\n\n<font size='2'>When supplied - The supplied value will be included in the returned json with a key of \"Request_Id\"</font><br><font size='2'>This can assist when threading multiple requests and the returns may not be returned syncronously.</font>\n\n","example":"PLBNw5AuokKnX+UrNZcvTQ=="},{"name":"output_epsg","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"EPSG Coordinate System Code","description":"**EPSG Coordinate System Code** <font size='2' color='red'>_[Optional]_</font> <sub>(More info on EPSG [link](https://epsg.io/))<sub>\n\n","examples":{"default":{"summary":"World Geodetic System 1984 (wgs84)","description":"World Geodetic System 1984 _(default)_ [(wgs84)](https://epsg.io/4326.prettywkt)","value":4326},"kysz":{"summary":"Kentucky Single Zone (kysz)","description":"Kentucky Single Zone [(kysz)](https://epsg.io/3089.prettywkt)","value":3089}},"default":4326},"description":"**EPSG Coordinate System Code** <font size='2' color='red'>_[Optional]_</font> <sub>(More info on EPSG [link](https://epsg.io/))<sub>\n\n"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/area/GetAreaInfoByCoordinates":{"get":{"tags":["Area Services"],"summary":"Get Area Info By Coordinates","description":"<h2>Get Area Information by Coordinates</h2>\n- **Purpose:** Return information about a geographical area by passing a coordinate pair.","operationId":"get_area_info_by_coordinates_api_area_GetAreaInfoByCoordinates_get","parameters":[{"name":"xcoord","in":"query","required":false,"schema":{"type":"number","title":"Longitude or X-Coordinate","description":"**Longitude** <font size='2' color='red'>_[Required]_</font> <sub>(when using geographic coordinates | Ex. -84.899536)<sub> <font size='2'>**or**</font>\n\n**X-Coordinate** <font size='2' color='red'>_[Required]_</font> <sub>(when using projected coordinates | Ex. 5165737.98)<sub>\n\n"},"description":"**Longitude** <font size='2' color='red'>_[Required]_</font> <sub>(when using geographic coordinates | Ex. -84.899536)<sub> <font size='2'>**or**</font>\n\n**X-Coordinate** <font size='2' color='red'>_[Required]_</font> <sub>(when using projected coordinates | Ex. 5165737.98)<sub>\n\n","example":-84.899536},{"name":"ycoord","in":"query","required":false,"schema":{"type":"number","title":"Latitude or Y-coordinate","description":"**Latitude** <font size='2' color='red'>_[Required]_</font> <sub>(when using geographic coordinates | Ex. 38.168369)<sub> <font size='2'>**or**</font>\n\n**Y-Coordinate** <font size='2' color='red'>_[Required]_</font> <sub>(when using projected coordinates | Ex. 3950115.03)<sub>\n\n"},"description":"**Latitude** <font size='2' color='red'>_[Required]_</font> <sub>(when using geographic coordinates | Ex. 38.168369)<sub> <font size='2'>**or**</font>\n\n**Y-Coordinate** <font size='2' color='red'>_[Required]_</font> <sub>(when using projected coordinates | Ex. 3950115.03)<sub>\n\n","example":38.168369},{"name":"return_keys","in":"query","required":false,"schema":{"type":"string","title":"Return Keys","description":"**Return Keys** <font size='2' color='red'>_[Optional]_</font><sub>(A full list of keys and definitions can be found here: [link](https://kytc-api-v100-docs-qrntk7e3ra-uc.a.run.app/app?tabs_main=1?tabs_main=1))<sub>\n\n<font size='2'>A comma separated list of keys to return.</font><br><font size='2'>When supplied - only those key/values will be returned. (Ordered by in which the keys are supplied)</font><br><font size='2'>When not supplied - all available key/values will be returned. (Ordered by keys alphabetically)</font>"},"description":"**Return Keys** <font size='2' color='red'>_[Optional]_</font><sub>(A full list of keys and definitions can be found here: [link](https://kytc-api-v100-docs-qrntk7e3ra-uc.a.run.app/app?tabs_main=1?tabs_main=1))<sub>\n\n<font size='2'>A comma separated list of keys to return.</font><br><font size='2'>When supplied - only those key/values will be returned. (Ordered by in which the keys are supplied)</font><br><font size='2'>When not supplied - all available key/values will be returned. (Ordered by keys alphabetically)</font>","example":"County_Name, KYTC_District_Number, Time_Zone, Zip_Code"},{"name":"request_id","in":"query","required":false,"schema":{"type":"string","title":"Supply and Return a Request Identifier","description":"**Supply and Return a Request Identifier** <font size='2' color='red'>_[Optional]_</font>\n\n<font size='2'>When supplied - The supplied value will be included in the returned json with a key of \"Request_Id\"</font><br><font size='2'>This can assist when threading multiple requests and the returns may not be returned syncronously.</font>\n\n"},"description":"**Supply and Return a Request Identifier** <font size='2' color='red'>_[Optional]_</font>\n\n<font size='2'>When supplied - The supplied value will be included in the returned json with a key of \"Request_Id\"</font><br><font size='2'>This can assist when threading multiple requests and the returns may not be returned syncronously.</font>\n\n","example":"PLBNw5AuokKnX+UrNZcvTQ=="},{"name":"input_epsg","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"EPSG Coordinate System Code","description":"**EPSG Coordinate System Code** <font size='2' color='red'>_[Optional]_</font> <sub>(More info on EPSG [link](https://epsg.io/))<sub>\n\n","examples":{"default":{"summary":"World Geodetic System 1984 (wgs84)","description":"World Geodetic System 1984 _(default)_ [(wgs84)](https://epsg.io/4326.prettywkt)","value":4326},"kysz":{"summary":"Kentucky Single Zone (kysz)","description":"Kentucky Single Zone [(kysz)](https://epsg.io/3089.prettywkt)","value":3089}},"default":4326},"description":"**EPSG Coordinate System Code** <font size='2' color='red'>_[Optional]_</font> <sub>(More info on EPSG [link](https://epsg.io/))<sub>\n\n"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/utilities/GetReturnKeyInfo":{"get":{"tags":["Utility Services"],"summary":"Get Return Key Info","description":"<h2>Get Return Key Information</h2>\n- **Purpose:** Return information (Key, Alias, Description, Data Type) about the return_keys for a specific API service.","operationId":"get_return_key_info_api_utilities_GetReturnKeyInfo_get","parameters":[{"name":"service","in":"query","required":false,"schema":{"type":"string","title":"Service","description":"**Service** <font size='2' color='red'>_[Required]_</font><sub>(The name of the service)<sub>\n\n<font size='2'>Service is a string of the service name.</font><br>","examples":{"GetRouteInfoByCoordinates":{"summary":"GetRouteInfoByCoordinates","description":"GetRouteInfoByCoordinates","value":"GetRouteInfoByCoordinates"},"GetRouteInfoByRouteAndMP":{"summary":"GetRouteInfoByRouteAndMP","description":"GetRouteInfoByRouteAndMP","value":"GetRouteInfoByRouteAndMP"},"GetRouteInfoByRouteAndTwoMilepoints":{"summary":"GetRouteInfoByRouteAndTwoMilepoints","description":"GetRouteInfoByRouteAndTwoMilepoints","value":"GetRouteInfoByRouteAndTwoMilepoints"},"GetRouteInfoBySnappingAdjacentLine":{"summary":"GetRouteInfoBySnappingAdjacentLine","description":"GetRouteInfoBySnappingAdjacentLine","value":"GetRouteInfoBySnappingAdjacentLine"},"GetRouteInfoBySnappingPolygon":{"summary":"GetRouteInfoBySnappingPolygon","description":"GetRouteInfoBySnappingPolygon","value":"GetRouteInfoBySnappingPolygon"},"RouteUniqueIdentifierParser":{"summary":"RouteUniqueIdentifierParser","description":"RouteUniqueIdentifierParser","value":"RouteUniqueIdentifierParser"},"DatedRouteIdParser":{"summary":"DatedRouteIdParser","description":"DatedRouteIdParser","value":"DatedRouteIdParser"},"GetCurrentRouteInfoFromDatedRoute":{"summary":"GetCurrentRouteInfoFromDatedRoute","description":"GetCurrentRouteInfoFromDatedRoute","value":"GetCurrentRouteInfoFromDatedRoute"},"GetAreaInfoByCoordinates":{"summary":"GetAreaInfoByCoordinates","description":"GetAreaInfoByCoordinates","value":"GetAreaInfoByCoordinates"}}},"description":"**Service** <font size='2' color='red'>_[Required]_</font><sub>(The name of the service)<sub>\n\n<font size='2'>Service is a string of the service name.</font><br>"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}